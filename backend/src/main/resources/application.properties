server.port=8088
spring.security.user.name=test
spring.security.user.password=foo

# Database Config
# Un-comment these lines to connect to a database. When commented out, you automatically get an in-memory-database.
#spring.datasource.url=jdbc:postgresql://localhost:5432/ferienpass-admin
#spring.datasource.username=ferienpass-admin
#spring.datasource.password=ferienpass-admin

#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.hibernate.ddl-auto=update

# Hide HHH000424: Disabling contextual LOB creation as createClob() method threw error
# see https://stackoverflow.com/a/48623870/4964553
logging.level.org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl: WARN

# activate debug logs for the requests
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter: DEBUG

# We changed this settings, because in our use-case we have only specific fields that we want to ignore (see controller/Views)
spring.jackson.mapper.default-view-inclusion=true

# Enable response compression
server.compression.enabled=true
# The comma-separated list of mime types that should be compressed
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
# Compress the response only if the response size is at least 1KB
server.compression.min-response-size=1024

# Enable HTTP/2 support, if the current environment supports it
server.http2.enabled=true

# add error message and error-fields to server-response (we use these in the frontend)
server.error.include-message=always
server.error.include-binding-errors=always

# When a user registers we send him an confirmation mail
# To better track these events, we also send a BCC to this address
ferienpass.confirmmail.bcc=ferienpasstest@gmail.com
